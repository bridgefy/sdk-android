[versions]
agp = "8.3.1"
buildInfoExtractorGradle = "5.2.0"
kotlin = "1.9.23"
kotlinxCoroutines = "1.8.0"
kotlinxSerialization = "1.6.3"
kotlinxDateTime = "0.6.0-RC.2"

androidxActivity = "1.8.2"
androidxComposeCompiler = "1.5.11"
androidxComposeMaterial = "1.6.5"
androidxComposeMaterial3 = "1.2.1"
androidxComposeMaterial3Adaptive = "1.0.0-alpha10"
androidxComposeMaterial3AdaptiveNavigation = "1.0.0-alpha05"
androidxComposeUi = "1.6.5"
androidxDataStore = "1.0.0"
androidCompose = "1.0.1"
androidxHilt = "1.2.0"
androidxLifecycle = "2.7.0"
androidxNavigation = "2.7.7"
androidxRoom = "2.6.1"
androidxSplashScreen = "1.0.1"
androidxStartup = "1.1.1"
androidxWindow = "1.2.0"
androidxWork = "2.9.0"

assertk = "0.28.0"
coil = "2.6.0"
dependencyAnalysis = "1.31.0"
desugarJdkLibs = "2.0.4"
detekt = "1.23.6"
dbtools = "8.3.0"
downloadPlugin = "5.6.0"

firebaseBom = "32.8.0"
firebaseAppDistPlugin = "4.2.0"
firebaseCrashlyticsPlugin = "2.9.9"
firebasePerfPlugin = "1.4.2"

googlePlayCore = "1.8.1"
gmsPlugin = "4.4.1"

hilt = "2.51.1"
kermit = "2.0.3"
kover = "0.7.6"
ksp = "1.9.23-1.0.19"
ktor = "3.0.0-beta-1"
leakCanary = "2.13"
licenseManager = "1.4.0"
mockK = "1.13.10"
okhttp = "4.12.0"
okio = "3.9.0"
playPublisher = "3.9.1"
ruler = "1.4.0"
sqliteJdbc = "3.45.2.0"
turbine = "1.1.0"
versionsPlugin = "0.51.0"
workManagerTools = "4.0.0"

sonarqubeGradlePlugin = "5.0.0.4638"
junit = "5.10.2"
retrofit = "2.10.0"
timber = "5.0.1"

googlePager="0.34.0"
uiToolingPreviewAndroid = "1.6.8"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysis" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
download = { id = "de.undercouch.download", version.ref = "downloadPlugin" }
firebase-appdistribution = { id = "com.google.firebase.appdistribution", version.ref = "firebaseAppDistPlugin" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
firebase-perf = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
gms = { id = "com.google.gms.google-services", version.ref = "gmsPlugin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
licenseManager = { id = "org.dbtools.license-manager", version.ref = "licenseManager" }
playPublisher = { id = "com.github.triplet.play", version.ref = "playPublisher" }
room = { id = "androidx.room", version.ref = "androidxRoom" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
android-gradlePluginClasspath = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-desugar = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "desugarJdkLibs" }

androidx-datastorePrefs = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDataStore" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidxStartup" }

androidx-preference = { module = "androidx.preference:preference-ktx", version = "1.2.1"}

androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidxComposeMaterial" }
google-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "googlePager" }
google-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "googlePager" }


androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidxHilt" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidxHilt" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "androidxHilt" }

androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycle" }

androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }

androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "androidxRoom" }

androidx-compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "androidCompose" }
androidx-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxSplashScreen" }

androidx-window = { module = "androidx.window:window", version.ref = "androidxWindow" }

androidx-work-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "androidxWork" }
androidx-work-gcm = { module = "androidx.work:work-gcm", version.ref = "androidxWork" }

coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

compose-material-iconsext = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidxComposeMaterial" } # Material design icons (extended)
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidxComposeMaterial3" }
compose-icons = { module = "androidx.compose.material:material-icons-extended", version = "androidxComposeUi"}
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidxComposeUi" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidxComposeUi" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidxComposeUi" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidxComposeUi" } # Tooling support (Previews, etc.)
compose-material3-windowsize = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "androidxComposeMaterial3" }

dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "hilt" }

dbtools-room = { module = "org.dbtools:dbtools-room", version.ref = "dbtools" }
dbtools-roomSqlite = { module = "org.dbtools:dbtools-room-sqliteorg", version.ref = "dbtools" }
dbtools-roomJdbc = { module = "org.dbtools:dbtools-room-jdbc", version.ref = "dbtools" }
dbtools-roomJdbcTest = { module = "org.dbtools:dbtools-room-jdbc-test", version.ref = "dbtools" }

google-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
google-hilt-gradlePluginClasspath = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
google-hilt-library = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
google-hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }

kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlin-coroutines-playServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlin-gradlePluginClasspath = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

mockK = { module = "io.mockk:mockk", version.ref = "mockK" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

ruler-gradlePluginClasspath = { module = "com.spotify.ruler:ruler-gradle-plugin", version.ref = "ruler" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

workmanagertools = { module = "org.dbtools:workmanager-tools", version.ref = "workManagerTools" }

xerial-sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqliteJdbc" }
androidx-ui-tooling-preview-android = { group = "androidx.compose.ui", name = "ui-tooling-preview-android", version.ref = "uiToolingPreviewAndroid" }
